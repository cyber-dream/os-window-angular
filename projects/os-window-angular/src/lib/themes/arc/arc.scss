//Fonts imports
@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');

// provide font size in rem, with px fallback
@mixin font($font, $size: 24, $base: 16) {
    font-family: $font;
    font-size: round($size) + pt;
    //font-size: ($size / $base) * 1rem;
}

// provide font size in rem, with px fallback
@mixin fontsize($size: 24, $base: 16) {
    font-size: round($size) + pt;
    //font-size: ($size / $base) * 1rem;
}

@mixin theme($variant, $transparency) {

    // The colors section may require some organization, heads up

    //Basics
    $base_color: if($variant !='dark', #ffffff, #404552);
    $text_color: if($variant !='dark', #5c616c, #D3DAE3);
    $bg_color: if($variant !='dark', #F5F6F7, #383C4A);
    $fg_color: if($variant !='dark', #5c616c, #D3DAE3);

    //Selection
    $selected_fg_color: #ffffff;
    $selected_bg_color: #5294e2;
    $selected_borders_color: darken($selected_bg_color, 20%);
    $borders_color: if($variant !='dark', darken($bg_color,9%), darken($bg_color,6%));

    //Links
    $link_color: if($variant !='dark', darken($selected_bg_color,10%),
                                        lighten($selected_bg_color,20%));
    $link_visited_color: if($variant !='dark', darken($selected_bg_color,20%),
                                        lighten($selected_bg_color,10%));

    // Not sure about this ones, i think they handle colors for very specific popups and warnings
    // May remove them later
    /*
    $selection_mode_bg: if($transparency == 'true', transparentize($selected_bg_color, 0.05), $selected_bg_color);
    $selection_mode_fg: $selected_fg_color;
    $warning_color: #F27835;
    $error_color: #FC4138;
    $warning_fg_color: white;
    $error_fg_color: white;
    $success_color: #73d216;
    $destructive_color: #F04A50;
    $suggested_color: #4DADD4;
    $destructive_fg_color: white;
    $suggested_fg_color: white;

    $drop_target_color: #F08437;

    //insensitive state derived colors
    $insensitive_fg_color: if($variant !='dark', transparentize($fg_color, 0.45), transparentize($fg_color, 0.55));
    $insensitive_bg_color: if($variant !='dark', mix($bg_color, $base_color, 40%), lighten($bg_color, 2%));
    */

    //window-bar
    $windowbar_bg: red;
    @if $transparency=='true' and ($variant=='light' or $variant=='lighter') { $windowbar_bg: transparentize(#e7e8eb, 0.05); }
    @if $transparency=='false' and ($variant=='light' or $variant=='lighter') { $windowbar_bg: #e7e8eb; }
    @if $transparency=='true' and ($variant=='dark' or $variant=='darker') { $windowbar_bg: transparentize(#2f343f, 0.03); }
    @if $transparency=='false' and ($variant=='dark' or $variant=='darker') { $windowbar_bg: #2f343f; }

    $windowbar_bg_backdrop: if($variant == 'dark' or $variant=='darker', lighten($windowbar_bg, 1.5%), lighten($windowbar_bg, 3%));

    $windowbar_border: if($variant == 'light' or $variant=='lighter', darken($windowbar_bg, 7%), darken($windowbar_bg, 4%));

    $windowbar_fg: if($variant == 'light' or $variant=='lighter', saturate(transparentize($fg_color, 0.2), 10%), saturate(transparentize($fg_color, 0.2), 10%));
    $windowbar_fg: if($variant=='darker', saturate(transparentize(#D3DAE3, 0.2), 10%), $windowbar_fg);


    //May use this, normally used (Example) in the left side of the nautilus file explorer i think
    $dark_sidebar_bg: if($transparency == 'true', transparentize(#353945, 0.05), #353945);
    $dark_sidebar_fg: #BAC3CF;
    @if $variant == 'lighter' {
        $dark_sidebar_bg: if($transparency == 'true', transparentize($bg_color, 0.05), $bg_color);
        $dark_sidebar_fg: $fg_color;
    }

    $dark_sidebar_border: $dark_sidebar_bg;
    @if $variant == 'dark' {
        $dark_sidebar_border: darken($dark_sidebar_bg, 5%);
    } @else if $variant == 'lighter' {
        $dark_sidebar_border: darken($dark_sidebar_bg, 8%);
    }

    $panel_bg: darken($dark_sidebar_bg, 4.7%);
    $panel_fg: $dark_sidebar_fg;

    $entry_bg: if($variant != 'dark', $base_color, lighten($base_color, 0%));
    $entry_border: if($variant != 'dark', #cfd6e6, darken($borders_color, 0%));

    $windowbar_entry_bg: if($variant == 'dark' or $variant == 'darker', transparentize(lighten($windowbar_bg, 22%), 0.6), transparentize($base_color, 0.1));
    $windowbar_entry_border: if($variant == 'dark' or $variant == 'darker', transparentize(darken($windowbar_bg, 12%), 0.6), transparentize($windowbar_fg, 0.7));

    $button_bg: if($variant != 'dark', lighten($bg_color, 2%), lighten($base_color, 2%));
    $button_border: $entry_border;

    $windowbar_button_bg: if($variant == 'dark' or $variant == 'darker', transparentize(lighten($windowbar_bg, 22%), 0.6), transparentize($button_bg, 0.1));
    $windowbar_button_border: if($variant == 'dark' or $variant == 'darker', transparentize(darken($windowbar_bg, 12%), 0.6), transparentize($windowbar_fg, 0.7));

    // Probably not going to use this ones, osd refers to (i think) 
    // the colors of: audio panels, the calendar, wifi panel, etc...
    // stuff accesable within the gnome shell panel.
    /*
    $osd_fg_color: $dark_sidebar_fg;
    $osd_bg_color: $dark_sidebar_bg;

    $osd_button_bg: if($variant != 'lighter', transparentize(lighten($osd_bg_color, 22%), 0.6), transparentize($button_bg, 0.1));
    $osd_button_border: if($variant != 'lighter', transparentize(darken($osd_bg_color, 12%), 0.6), transparentize($osd_fg_color, 0.7));

    $osd_entry_bg: if($variant != 'lighter', transparentize(lighten($osd_bg_color, 22%), 0.6), transparentize($base_color, 0.1));
    $osd_entry_border: if($variant != 'lighter', transparentize(darken($osd_bg_color, 12%), 0.6), transparentize($osd_fg_color, 0.7));

    $osd_insensitive_bg_color: if($variant != 'lighter', darken($osd_bg_color, 3%), $insensitive_bg_color);
    $osd_insensitive_fg_color: if($variant != 'lighter', mix($osd_fg_color, opacify($osd_bg_color, 1), 30%), $insensitive_fg_color);
    $osd_borders_color: if($variant != 'lighter', transparentize(black, 0.3), transparentize(black, 0.83));
    */

    //Control buttons, this should be used with .SVGs, probably next release

    // Close
    $wm_button_close_bg: if($variant == 'light' or $variant=='lighter', #f46067, #cc575d);
    $wm_button_close_hover_bg: if($variant == 'light' or $variant=='lighter', #f68086, #d7787d);
    $wm_button_close_active_bg: if($variant == 'light' or $variant=='lighter', #f13039, #be3841);

    $wm_icon_close_bg: if($variant == 'light' or $variant=='lighter', #F8F8F9 , #2f343f);

    // Minimize, Maximize
    $wm_button_hover_bg: if($variant == 'light' or $variant=='lighter', #fdfdfd, #454C5C);
    $wm_button_active_bg: $selected_bg_color;

    $wm_button_hover_border: if($variant == 'light' or $variant=='lighter', #D1D3DA, #262932);

    $wm_icon_bg: if($variant == 'light' or $variant=='lighter', #90949E, #90939B);
    $wm_icon_unfocused_bg: if($variant == 'light' or $variant=='lighter', #B6B8C0, #666A74);
    $wm_icon_hover_bg: if($variant == 'light' or $variant=='lighter', #7A7F8B, #C4C7CC);
    $wm_icon_active_bg: $selected_fg_color;
    

    // Fonts
    $font-size: 9;
    $font-family: Futura Bk bt, 'Open Sans', sans, Sans-Serif;


    //
    // CSS Variables (We may change this ones in runtime)
    //

    //Border of the window
    --winBorder: 1px;
    --winRadius: 5px;

    // Maximized styles > Focused styles > Normal style

    //
    // General styles
    // 
    .os-window {
        border-radius: var(--winRadius);
        border: var(--winBorder) solid $windowbar_border;

        $_wm_border: if($variant!='dark', transparentize(black, 0.9), transparentize(black, 0.45));
        box-shadow: 0 0 0 1px if($variant == 'dark' or $variant == 'darker', darken($windowbar_bg, 7%), $_wm_border),
                    0 8px 8px 0 if($variant !='dark', opacify($_wm_border, 0.1), transparentize($_wm_border, 0.2));

        @include font($font-family, $font-size);

        .window-bar {
            height: 44px;

            background-color: $windowbar_bg;
    
            border-color: $windowbar_border;
            border-bottom: 1px solid $windowbar_border;
    
            border-top-left-radius: var(--topRadius);
            border-top-right-radius: var(--topRadius);
            
            .window-bar-anchor {
                height: 36px;
                width: 100%;

                .window-title  {
                    margin-left: 30px;
            
                    ::ng-deep span {
                        color: $windowbar_fg;
                    }
                }
            }
        }

        .window-content {
            background-color: $base_color;
            color: $text_color;
        }
    }

    //
    // Focused window styles
    //
    .focused {
        .window-bar {
            background-color: opacify($windowbar_bg, 1);
        }
    }

    //
    // Maximized window styles
    //
    .maximized {
        border: 0px;
        border-radius: 0px;

        .window-bar {
            border: 0px;
            border-radius: 0px;
            
            background-color: opacify($windowbar_bg, 1);
        }
    }

    //
    // Separators
    //
    .controls-separator {
        margin-right: 14px;
        transform: translate(4px, -1px);
        width: 1px;
        height: 15px;
        background: transparentize($windowbar_fg, 0.65);
    }

    //
    // Window control buttons
    //
    .controls-container {
        margin-right: 8px;
        width: 76px;
        height: auto;

        .controls {
    
            padding: 0;
            min-height: 16px;
            width: 16px;
            height: 16px;
            border: 0px;
            background-color: rgba(0,0,0,0);
            box-shadow: none;
            outline: 0;
        }
    }

    //
    // Links
    //
    .window-content ::ng-deep {
        a { color: $link_color; }
        a:visited { color: $link_visited_color; }
        a:visited:hover { color: lighten($link_visited_color,10%); }
        a:hover { color: lighten($link_color,10%); }
    }

    //
    // Scrollbars
    //
    .window-content ::ng-deep {

        .os-scrollbar-track {
            background-color: transparentize($base_color, 0.9);
            margin-bottom: 5px;
        }

        .os-scrollbar-thumb {
            background-color: transparentize( mix($fg_color, $bg_color, 40%), 0.4);
        }
    }
}

@mixin lightAssets {
    $asset_path: './assets/light-assets/controls';

    .minimize {
        background: url("#{$asset_path}/light-titlebutton-minimize.png");
        &:hover { background: url("#{$asset_path}/light-titlebutton-minimize-hover.png"); }
        &:active { background: url("#{$asset_path}/light-titlebutton-minimize-active.png"); }
    }

    .maximize {
        background: url("#{$asset_path}/light-titlebutton-maximize.png");
        &:hover { background: url("#{$asset_path}/light-titlebutton-maximize-hover.png"); }
        &:active { background: url("#{$asset_path}/light-titlebutton-maximize-active.png"); }
    }

    .close {
        background: url("#{$asset_path}/light-titlebutton-close.png");
        &:hover { background: url("#{$asset_path}/light-titlebutton-close-hover.png"); }
        &:active { background: url("#{$asset_path}/light-titlebutton-close-active.png"); }
    }
}

@mixin darkAssets {
    $asset_path: './assets/dark-assets/controls';

    .minimize {
        background: url("#{$asset_path}/dark-titlebutton-minimize.png");
        &:hover { background: url("#{$asset_path}/dark-titlebutton-minimize-hover.png"); }
        &:active { background: url("#{$asset_path}/dark-titlebutton-minimize-active.png"); }
    }

    .maximize {
        background: url("#{$asset_path}/dark-titlebutton-maximize.png");
        &:hover { background: url("#{$asset_path}/dark-titlebutton-maximize-hover.png"); }
        &:active { background: url("#{$asset_path}/dark-titlebutton-maximize-active.png"); }
    }

    .close {
        background: url("#{$asset_path}/dark-titlebutton-close.png");
        &:hover { background: url("#{$asset_path}/dark-titlebutton-close-hover.png"); }
        &:active { background: url("#{$asset_path}/dark-titlebutton-close-active.png"); }
    }
}

.arc-light {
    @include theme('light', 'true');
    @include lightAssets();
}

.arc-lighter {
    @include theme('lighter', 'true');
    @include lightAssets();
}

.arc-dark {
    @include theme('dark', 'true');
    @include darkAssets();
}

.arc-darker {
    @include theme('darker', 'true');
    @include darkAssets();
}